{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAlBPJ,EAAAY,OAAOC,KAAK,CACVV,SAAU,YACVW,SAAU,OACVC,kBAAmB,aACnBC,MAAO,QACPC,qBAAsB,MAGXC,SAASC,cAAc,SA+B/BC,iBAAiB,UAjBtB,SAAoBC,GAClBA,EAAEC,iBAKF,IAJA,IAAMC,EAAQC,SAASH,EAAEI,OAAOC,SAAStB,MAAMuB,OACzCC,EAAOJ,SAASH,EAAEI,OAAOC,SAASE,KAAKD,OACvCE,EAASL,SAASH,EAAEI,OAAOC,SAASG,OAAOF,OAExCG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/B5B,EAAc4B,EAAI,EAAGP,EAAQO,EAAIF,GAC9BG,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBJ,EAAAY,OAAOqB,QAAQ,qBAAoCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE1D+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBJ,EAAAY,OAAOwB,QAAQ,oBAAmCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  position: 'right-top',\n  fontSize: '18px',\n  cssAnimationStyle: 'from-right',\n  width: '350px',\n  cssAnimationDuration: 600,\n});\n\nconst form = document.querySelector('.form');\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction getPromise(e) {\n  e.preventDefault();\n  const delay = parseInt(e.target.elements.delay.value);\n  const step = parseInt(e.target.elements.step.value);\n  const amount = parseInt(e.target.elements.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nform.addEventListener('submit', getPromise);"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","init","fontSize","cssAnimationStyle","width","cssAnimationDuration","document","querySelector","addEventListener","e","preventDefault","delay1","parseInt","target","elements","value","step","amount","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.e033732f.js.map"}